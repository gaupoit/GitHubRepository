@using RavenOverflow.Web.Models.ViewModels
@using RavenOverflow.Web.Models
@model QuestionListViewModel
           
@if (Model == null || Model.Questions == null || Model.Questions.Count <= 0)
{
    <p>No questions have been asked.</p>
}
else
{
    foreach (var question in Model.Questions)
    { 
        <div class="question-summary narrow" id="question-summary-@question.Id">
            <div class="votes">
                <div class="mini-counts">@((question.Vote == null ? 0 : question.Vote.UpVoteCount - question.Vote.DownVoteCount).ToSimplifiedNumberText())</div>
                <div>votes</div>
            </div>

            <div class="status unanswered">
                <div class="mini-counts">@((question.Answers != null ? question.Answers.Count : 0).ToSimplifiedNumberText())</div>
                <div>answers</div>

            </div>

            <div class="views">
                <div class="mini-counts">@question.NumberOfViews.ToSimplifiedNumberText()</div>
                <div>views</div>
            </div>

            <div class="summary">
                <h3><a href="#" class="question-hyperlink" title="@question.Content">@question.Subject</a></h3>

                @Html.Partial("_QuestionTagList", question.Tags)
                

                <div class="started">
                    <span title="@question.CreatedOn" class="relativetime">@question.CreatedOn.ToShortDateString()&nbsp;@question.CreatedOn.ToShortTimeString()</span>
                    <a href="#">@question.DisplayName</a>
                    <span class="reputation-score" title="reputation score">??</span>
                </div>
            </div>
        </div>
    }
}
           
